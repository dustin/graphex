name: Haskell CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache Key
      id: cache_key
      run: echo ::set-output name=key::$(md5sum stack.yaml | awk '{print $1}')

    - name: Cache Dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ steps.cache_key.outputs.key }}

    - name: Build Snapshot
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        stack --no-terminal test --bench --only-snapshot

    - name: Build & Test
      run: |
        stack --no-terminal test --bench --no-run-benchmarks --haddock --no-haddock-deps --coverage
        stack install
        PKG_NAME=$(cat *.cabal | grep "name:" | sed "s/name:\s*\(.*\)/\1/")
        cp $HOME/.local/bin/graphex .
    
    - name: Store Artifact
      uses: actions/upload-artifact@v4
      with:
        name: graphex-${{ matrix.os }}
        path: graphex

    - name: Update Doc Site
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      run: |
        PKG_NAME=$(cat *.cabal | grep "name:" | sed "s/name:\s*\(.*\)/\1/")
        cp $HOME/.local/bin/graphex .
        mkdir -p dist/  && mv $(stack path --local-install-root)/doc/$PKG_NAME-*/* dist/
        mkdir -p dist/coverage/ && mv $(stack path --local-hpc-root)/$PKG_NAME/$PKG_NAME-*/* dist/coverage/
        cp dist/coverage/hpc_index.html dist/coverage/index.html
   
    - name: Publish Docs
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist
        enable_jekyll: false
